{"version":3,"sources":["components/Header.js","components/BottomNav.js","components/Home/yesterdaysTrans.js","components/Home/cashFlow.js","components/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","root","flexGrow","props","classes","pageName","react_default","a","createElement","className","AppBar_default","position","color","Toolbar_default","Typography_default","variant","BottomNav","_this$props","this","pages","setPage","value","BottomNavigation_default","onChange","map","page","index","BottomNavigationAction_default","label","name","icon","key","React","Component","width","bottom","marginTop","theme","Object","defineProperty","margin","backgroundColor","palette","background","paper","breakpoints","up","transDetails","textAlign","List_default","component","subheader","ListSubheader_default","dense","ListItem_default","button","ListItemText_default","primary","secondary","ListItemSecondaryAction_default","Divider_default","cashIn","cashOut","Home","react","yesterdaysTrans","cashFlow","display","flexWrap","justifyContent","Home_default","AccountBalance_default","AttachMoney_default","Person_default","App","state","selectedPage","event","_this","setState","components_Header","components_Home","components_BottomNav","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","createMuiTheme","main","ReactDOM","render","core_styles","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6f648a32.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1\r\n    }\r\n};\r\n\r\nfunction Header(props) {\r\n    const { classes, pageName } = props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"primary\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" color=\"secondary\">\r\n                        {pageName}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nHeader.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Header);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\n\r\nconst styles = {\r\n    root: {\r\n        width: \"100%\",\r\n        position: \"fixed\",\r\n        bottom: 0,\r\n        marginTop: \"8%\"\r\n    }\r\n};\r\n\r\nclass BottomNav extends React.Component {\r\n    render() {\r\n        const { classes, pages, setPage, value } = this.props;\r\n\r\n        return (\r\n            <BottomNavigation\r\n                value={value}\r\n                onChange={setPage}\r\n                className={classes.root}\r\n            >\r\n                {pages.map((page, index) => (\r\n                    <BottomNavigationAction\r\n                        label={page.name}\r\n                        value={page.name}\r\n                        icon={page.icon}\r\n                        key={index}\r\n                    />\r\n                ))}\r\n            </BottomNavigation>\r\n        );\r\n    }\r\n}\r\n\r\nBottomNav.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(BottomNav);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n\r\n        margin: \"2%\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: \"70%\"\r\n        }\r\n    },\r\n    transDetails: {\r\n        textAlign: \"right\"\r\n    }\r\n});\r\n\r\nfunction SimpleList(props) {\r\n    const { classes } = props;\r\n    return (\r\n        <div className={classes.root}>\r\n            <List\r\n                component=\"div\"\r\n                subheader={\r\n                    <ListSubheader component=\"div\">\r\n                        Yesterdays Transactions\r\n                    </ListSubheader>\r\n                }\r\n                dense\r\n            >\r\n                <ListItem button>\r\n                    <ListItemText\r\n                        primary={<Typography variant=\"h6\">Food</Typography>}\r\n                        secondary=\"expense\"\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n                        <ListItemText\r\n                            className={classes.transDetails}\r\n                            primary={<Typography variant=\"h6\">-$88</Typography>}\r\n                            secondary=\"9:00\"\r\n                        />\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem button>\r\n                    <ListItemText\r\n                        primary={<Typography variant=\"h6\">Food</Typography>}\r\n                        secondary=\"expense\"\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n                        <ListItemText\r\n                            className={classes.transDetails}\r\n                            primary={<Typography variant=\"h6\">-$88</Typography>}\r\n                            secondary=\"9:00\"\r\n                        />\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem button>\r\n                    <ListItemText primary={\"View all Transactions\"} />\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n\r\nSimpleList.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SimpleList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        margin: \"2%\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: \"70%\"\r\n        }\r\n    },\r\n    transDetails: {\r\n        textAlign: \"right\"\r\n    },\r\n    cashIn: {\r\n        color: \"#58a05b\"\r\n    },\r\n    cashOut: {\r\n        color: \"#e60000\"\r\n    }\r\n});\r\n\r\nfunction CashFlow(props) {\r\n    const { classes } = props;\r\n    return (\r\n        <div className={classes.root}>\r\n            <List\r\n                component=\"div\"\r\n                subheader={\r\n                    <ListSubheader component=\"div\">\r\n                        Income and Expenses\r\n                    </ListSubheader>\r\n                }\r\n                dense\r\n            >\r\n                <ListItem button>\r\n                    <ListItemText\r\n                        primary={\r\n                            <Typography variant=\"h6\">Yesterday</Typography>\r\n                        }\r\n                        secondary=\"24 Apr\"\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n                        <ListItemText\r\n                            className={classes.transDetails}\r\n                            primary={\r\n                                <Typography\r\n                                    variant=\"h6\"\r\n                                    className={classes.cashIn}\r\n                                >\r\n                                    $88\r\n                                </Typography>\r\n                            }\r\n                            secondary={\r\n                                <Typography\r\n                                    variant=\"h6\"\r\n                                    className={classes.cashOut}\r\n                                >\r\n                                    -$88\r\n                                </Typography>\r\n                            }\r\n                        />\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem button>\r\n                    <ListItemText\r\n                        primary={\r\n                            <Typography variant=\"h6\">Yesterday</Typography>\r\n                        }\r\n                        secondary=\"24 Apr\"\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n                        <ListItemText\r\n                            className={classes.transDetails}\r\n                            primary={\r\n                                <Typography\r\n                                    variant=\"h6\"\r\n                                    className={classes.cashIn}\r\n                                >\r\n                                    $88\r\n                                </Typography>\r\n                            }\r\n                            secondary={\r\n                                <Typography\r\n                                    variant=\"h6\"\r\n                                    className={classes.cashOut}\r\n                                >\r\n                                    -$88\r\n                                </Typography>\r\n                            }\r\n                        />\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n                <Divider />\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n\r\nCashFlow.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(CashFlow);\r\n","import React, { Fragment, Component } from \"react\";\r\nimport YesterdaysTrans from \"./yesterdaysTrans\";\r\nimport CashFlow from \"./cashFlow\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            justifyContent: \"center\"\r\n        }\r\n    }\r\n});\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <div className={classes.root}>\r\n                    <YesterdaysTrans />\r\n                    <CashFlow />\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Home);\r\n","import React, { Fragment, Component } from \"react\";\nimport Header from \"./components/Header\";\nimport BottomNav from \"./components/BottomNav\";\nimport HomePage from \"./components/Home\";\nimport Home from \"@material-ui/icons/Home\";\nimport AccountBalance from \"@material-ui/icons/AccountBalance\";\nimport Person from \"@material-ui/icons/Person\";\nimport Money from \"@material-ui/icons/AttachMoney\";\n\nconst pages = [\n    {\n        name: \"Home\",\n        icon: <Home />\n    },\n    {\n        name: \"Accounts\",\n        icon: <AccountBalance />\n    },\n    {\n        name: \"Budget\",\n        icon: <Money />\n    },\n    {\n        name: \"Me\",\n        icon: <Person />\n    }\n];\n\nclass App extends Component {\n    state = {\n        selectedPage: \"Home\"\n    };\n\n    setPage = (event, selectedPage) => {\n        this.setState({ selectedPage });\n    };\n    render() {\n        const { selectedPage } = this.state;\n        return (\n            <Fragment>\n                <Header pageName={selectedPage} />\n                <HomePage />\n                <BottomNav\n                    pages={pages}\n                    setPage={this.setPage}\n                    value={selectedPage}\n                />\n            </Fragment>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#212121\"\n        },\n        secondary: {\n            main: \"#ffffff\"\n        }\n    }\n});\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <App />\n    </MuiThemeProvider>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}